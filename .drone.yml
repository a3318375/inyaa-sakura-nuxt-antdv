kind: pipeline
type: docker
name: default

steps:
  - name: restore-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      restore: true
      mount:
        - ./node_modules
        - ./yarn.lock
  - name: build
    image: node:latest
    volumes:
      - name: cache
        path: /cache
    commands:
      - yarn
      - yarn build
  - name: rebuild-cache
    image: drillster/drone-volume-cache
    volumes:
      - name: cache
        path: /cache
    settings:
      rebuild: true
      mount:
        - ./node_modules
        - ./yarn.lock
  - name: docker
    image: plugins/docker
    settings:
      username: 100013433790
      password: Yuxh3318375!
      repo: ccr.ccs.tencentyun.com/inyaa/inyaa-sakura-nuxt
      registry: ccr.ccs.tencentyun.com
      tags: latest
  - name: ssh commands
    pull: if-not-exists
    image: appleboy/drone-ssh
    settings:
      host: 122.51.60.92
      username: root
      password:
        # 从drone仓库配置中秘密空间读取密码
        from_secret: ssh_password
      port: 22
      # 注意把下面的 springboot-helloworld 改成自己项目mvn pkg会生成的jar包名称
      script:
        - echo =======暂停容器=======
        - docker stop $(docker ps -a | grep "inyaa-sakura-nuxt" | awk '{print $1}')
        - echo =======暂停旧容器和镜像=======
        - docker rm -f $(docker ps -a | grep inyaa-sakura-nuxt | awk '{print $1}')
        - docker rmi $(docker images | grep inyaa-sakura-nuxt | awk '{print $3}')
        - echo =======开始部署应用=======
        - docker run -d -p 3000:3000 --name inyaa-sakura-nuxt --network inyaa --network-alias inyaa-sakura-nuxt ccr.ccs.tencentyun.com/inyaa/inyaa-sakura-nuxt:latest
        - echo =======部署成功=======
volumes:
  - name: cache
    host:
      path: /tmp/cache
